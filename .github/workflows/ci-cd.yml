name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5


    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        pip install poetry
        poetry install

    - name: Wait for PostgreSQL to be ready
      run: sleep 10

    - name: Run tests and check coverage
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: database
        DB_USER: user
        DB_PASSWORD: password
      run: |
        poetry run coverage run test-api.py
        poetry run coverage report --fail-under=85

  build:
    runs-on: ubuntu-latest
    needs: test  # Solo se ejecuta si el job 'test' es exitoso

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: |
        docker build -t engsteven/py01-bd2:latest .

    - name: Push Docker image
      run: |
        docker tag engsteven/py01-bd2:latest engsteven/py01-bd2:latest
        docker push engsteven/py01-bd2:latest
